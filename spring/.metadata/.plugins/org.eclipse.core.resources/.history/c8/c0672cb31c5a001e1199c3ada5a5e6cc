package pack.service;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.stereotype.Service;

import lombok.RequiredArgsConstructor;
import pack.model.Cart;
import pack.model.Order;
import pack.repository.CartRepository;
import pack.repository.OrderRepository;

@Service
@RequiredArgsConstructor
@Repository
public class CartService {

	private Logger logger = LoggerFactory.getLogger(this.getClass());

	@Autowired
	private CartRepository cartRepository1;
	
	@Autowired
	private OrderRepository orderRepository;

	// 전체 자료 읽기
	public List<Cart> getDataAll() {
		List<Cart> cartlist = cartRepository1.findAll();
		logger.info("carts " + cartlist.size());
		return cartlist;
	}

	//구매목록에 추가
	public boolean insertCartFromJjim(int product_id) {
		try {
			// carts 테이블로부터 데이터를 가져옵니다.
			Cart cart = cartRepository.findById(product_id).orElse(null);

			if (cart != null ) {
				Order order = new Order();			
				order.setName(cart.getName());
				order.setPimage(cart.getPimage());
				order.setOrdercount(cart.getCount());
				order.setProduct_id(product_id);
				order.setTotal(cart.getCartprice());

				
				orderRepository.save(order);
				cartRepository1.delete(cart);
				return true;

			} else {
				return false; // product_id에 해당하는 상품이 없는 경우
			}
		} catch (Exception e) {
			e.printStackTrace();
			return false; // 예외 발생 시 실패
		}
	}
	
	
	//장바구니 비우기
	public boolean deleteProductAll() {
		try {
			cartRepository1.deleteAllInBatch();
			return true;
		} catch (Exception e) {
			// 예외 처리
			return false;
		}
	}

	// 특정 상품 삭제하기
	@Autowired
	private CartRepository cartRepository;

	public boolean deleteProduct(int cart_id) {
		try {
			cartRepository1.deleteById(cart_id);
			return true;
		} catch (Exception e) {
			// 예외 처리
			return false;
		}
	}

}
