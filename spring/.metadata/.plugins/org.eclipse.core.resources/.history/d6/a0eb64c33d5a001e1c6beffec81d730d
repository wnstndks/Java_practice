package pack.controller;

import java.util.ArrayList;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import pack.model.Cart;
import pack.model.Product;
import pack.service.CartService;
import pack.service.ProductService;

@Controller
public class CartController {

	@Autowired
	private CartService cartService;

	@Autowired
	private ProductService productService;
	
	// 장바구니 목록보기
	@GetMapping("cartlist")
	public String listProcess(Model model) {
		ArrayList<Cart> cartlist = (ArrayList<Cart>) cartService.getDataAll(); // jpa를 이용해 자료를 읽게 한 것

		model.addAttribute("carts", cartlist);

		return "cartlist";
	}

	// 장바구니에 물건 넣기
    @PostMapping("/user/cart/{id}/{itemId}")
    public String addCartItem(@PathVariable("product_id") Integer product_id, int amount) {

    	Product product = productService.itemView(product_id);

        cartService.addCart(product, amount);

        return "redirect:/item/view/{itemId}";
    }
	
	
	// 주문하기
	@GetMapping("/addOrderFromCart")
	public String JjimCart(@RequestParam("cart_id") int cart_id, RedirectAttributes redirectAttributes) {
		boolean result = cartService.insertOrderFromCart(cart_id);
		if (result) {
			System.out.println(cart_id + "주문에 성공하였습니다.");
			return "redirect:/cartlist";
		} else {
			redirectAttributes.addFlashAttribute("errorMessage", "주문에 실패했습니다.");
			return "redirect:/cartlist";
		}
	}

	// 장바구니 비우기
	@GetMapping("/deletecartall")
	public String delete(RedirectAttributes redirectAttributes) {
		boolean result = cartService.deleteProductAll();
		if (result) {
			return "redirect:/cartlist";
		} else {
			redirectAttributes.addFlashAttribute("errorMessage", "상품 삭제에 실패했습니다.");
			return "redirect:/cartlist";
		}
	}

	// 장바구니에서 삭제하기
	@GetMapping("/deletecart")
	public String delete(@RequestParam("cart_id") int cart_id, RedirectAttributes redirectAttributes) {
		boolean result = cartService.deleteProduct(cart_id);
		if (result) {
			return "redirect:/cartlist";
		} else {
			redirectAttributes.addFlashAttribute("errorMessage", "상품 삭제에 실패했습니다.");
			return "redirect:/cartlist";
		}
	}
}
