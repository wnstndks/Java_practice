package pack.service;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.stereotype.Service;

import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;
import pack.model.Cart;
import pack.model.Product;
import pack.repository.CartRepository;
import pack.repository.OrderRepository;
import pack.repository.ProductRepository;

@Service
@RequiredArgsConstructor
@Repository
public class CartService {

	private Logger logger = LoggerFactory.getLogger(this.getClass());

	@Autowired
	private CartRepository cartRepository;

	@Autowired
	private OrderRepository orderRepository;

	@Autowired
	private ProductRepository productRepository;

	// 전체 자료 읽기
	public List<Cart> getDataAll() {
		List<Cart> cartlist = cartRepository.findAll();
		logger.info("carts " + cartlist.size());
		return cartlist;
	}

	// 장바구니 담기
	@Transactional
	public void addCart(Product newProduct, int stock) {

	    Product product = productRepository.findProductById(newProduct.getProduct_id());
	    Cart cart = cartRepository.findByCartIdAndProductId(cart.getCart_id(), product.getProduct_id());

	    if(cart!=null) {
	        Cart update = cart;
	        update.addCount(stock);
	        update.setCount(update.getCount());
	        cartRepository.save(update);
	    }

	    // 카트 상품 총 개수 증가
	    cart.setCount(cart.getCount()+stock);

	}
	
	// 장바구니 비우기
	public boolean deleteProductAll() {
		try {
			cartRepository.deleteAllInBatch();
			return true;
		} catch (Exception e) {
			// 예외 처리
			return false;
		}
	}

	// 특정 상품 삭제하기
	public boolean deleteProduct(int cart_id) {
		try {
			cartRepository.deleteById(cart_id);
			return true;
		} catch (Exception e) {
			// 예외 처리
			return false;
		}
	}

}
